{
    "collab_server" : "",
    "contents" : "---\ntitle: \"conceptNet\"\ndate: \"2/15/2018\"\noutput: html_document\n---\n\nLibraries\n```{r setup, include=FALSE}\n library(purrr)\n  library(readr)\n  library(ggplot2)\n  library(langcog)\n  library(boot)\n  library(dplyr)\n  library(tidyr)\n  library(wordbankr)\n  library(directlabels)\n  library(stringr)\n  library(lmtest)\n  library(rwebppl)\n  library(jsonlite)\n  library(nlme)\n  library(feather)\n  library(broom)\n  library(HDInterval)\n  library(BBmisc)\n  library(wordVectors)\n  library(magrittr)\n```\n\nData\n\n```{r}\n\nd <- read_delim(\"data/associations.txt\", delim = \"\\t\") \n  \n```\n\nThis function is used to recode symbols in cmu phonetic dictionary in with a unique character (easier to compute Edit distance) \n```{r}\n\n#Read in phones and the corresponding set of characters\n\ncharacters <- read_delim(\"data/symbolsToChar.txt\", delim = \"\\t\", col_names = FALSE) \nphones <- read_delim(\"data/cmu_symbols.txt\", delim = \"\\t\", col_names = FALSE)\nphon_dict <- bind_cols(phones, characters)\n\n#Converts string to its representation using the symbols\nconvert <- function(str, combined) {\n    if (typeof(str) != \"character\" && class(str) != \"factor\") \n        stop(sprintf(\"Illegal data type: %s\", typeof(str)))\n    if (class(str) == \"factor\") \n        str = as.character(str)\n    if (length(str) == 0)\n        return(integer(0))\n    splitstring = strsplit(str, split=\" \")\n    result_string = \"\"\n    for (i in splitstring) {\n      for (j in i) {\n        filtered <- filter(combined, X1 == j)\n        converted <- select(filtered, X11)\n        result_string <- paste(result_string, converted)\n      }\n    }\n    return(result_string)\n}\n\n```\n\nHere the main analyses\n\n```{r}\n#For each word, list all other the words that have been mentioned \n\n#I should calculate the most frequent response and the percentage from \n\ndict <- read_delim(\"data/cmu_dict.txt\", delim = \",\") \n\nd_assoc <- d %>%\n  dplyr::group_by(Experimenter_Word, Age2, Child_Word) %>%\n  dplyr::summarise(n=n()) %>%\n  dplyr::mutate(percent = 100*n/sum(n)) %>%\n  dplyr::filter(percent == max(percent)) \n\nExp_words <- d_assoc %>%\n  ungroup() %>%\n  select(Experimenter_Word) %>%\n  distinct() %>%\n  mutate(Word = toupper(Experimenter_Word)) %>%\n  left_join(dict) %>%\n  select(-Word) %>%\n  rename(Experimenter_Word_phon = Phonetic)\n\nChi_words <- d_assoc %>%\n  ungroup() %>%\n  select(Child_Word) %>%\n  distinct() %>%\n  mutate(Word = toupper(Child_Word)) %>%\n  left_join(dict) %>%\n  select(-Word) %>%\n  rename(Child_Word_phon = Phonetic)\n  \nd_assoc_phon <- d_assoc %>%\n  left_join(Exp_words) %>%\n  left_join(Chi_words) %>%\n  rowwise() %>%\n  mutate(\n    Exp_code = convert(Experimenter_Word_phon, phon_dict), \n    Child_code = convert(Child_Word_phon, phon_dict)\n    ) %>%\n  mutate(Phon_dist = adist(Exp_code, Child_code))\n\n\n```\n\nHere we reproduce the development of paradigmatic vs. syntagmatic as in Erica's previous research\n\n```{r}\nd_age <- d %>%\n  group_by(Age2) %>%\n  summarise(mean = mean(Para),\n            sd = sd(Para),\n                   n0 = n()) %>%\n  mutate(se = sd / sqrt(n0),\n         lower = mean - qt(1 - (0.05 / 2), n0 - 1) * se,\n         upper = mean + qt(1 - (0.05 / 2), n0 - 1) * se)\n  \n#d_age$Age2 = factor(d_age$Age2, levels = c(\"Younger\", \"Older\", \"Adult\"))`\n\nggplot(d_age, aes(x=Age2, y=mean))+\n  geom_pointrange(aes(ymin = lower, ymax = upper), \n                  position = position_dodge(width = .1)) \n\n```\n\nHere the development in terms of reliance on phonetic distance \n\nI should filter the words for both adults and children\n```{r}\n\nword_excl <- (d_assoc_phon %>%\n  filter(is.na(Child_Word_phon) | Phon_dist ==\"0\") %>%\n  distinct(Experimenter_Word))$Experimenter_Word\n\nphon_plot <- d_assoc_phon %>%\n  filter(!(Experimenter_Word %in% word_excl)) %>%\n  group_by(Age2) %>%\n  summarise(mean = mean(Phon_dist),\n            sd = sd(Phon_dist),\n                   n0 = n()) %>%\n  mutate(se = sd / sqrt(n0),\n         lower = mean - qt(1 - (0.05 / 2), n0 - 1) * se,\n         upper = mean + qt(1 - (0.05 / 2), n0 - 1) * se) #%>%\n  #select(-sd, -n0, -se)\n\nphon_plot$Age2 = factor(phon_plot$Age2, levels = c(\"Younger\", \"Older\", \"Adult\"))\n\nggplot(phon_plot, aes(x=Age2, y=mean))+\n  geom_pointrange(aes(ymin = lower, ymax = upper), \n                  position = position_dodge(width = .1)) \n\n##Things to do probably:\n\n# 1) Why is the adult similarity almost as low as the younger children? For example, we can  select the words that have the lowest edit distance (say, d<4) in both Younger and adults and see if they are similar? \n\n# 2) Also probably break things out by lexical category, e.g., content wrods (nouns, verbs, adjectivees) vs. function words (preposition, ...)\n\n\n```\n\nNow work with semantic similarity from CHILDES \n\n```{r}\n\n#Generate the model and store it in \"derived\"\nmodel = train_word2vec(\"data/corpus.txt\",\n                             output=\"corpus.bin\", threads = 4,\n                             vectors = 100, window=20, cbow=1, min_count = 10, force= TRUE)\n\n#Read the model \nmodel = read.vectors(\"derived/corpus.bin\")\n```\n\n```{r}\n\nChild_words <- (d %>%\n  distinct(Child_Word))$Child_Word\n\nExperimenter_words <- (d %>%\n  distinct(Experimenter_Word))$Experimenter_Word\n\nmodel_cue <- model[[which(rownames(model) %in% Experimenter_words), average=FALSE]]\n\nmodel_target <- model[[which(rownames(model) %in% Child_words), average=FALSE]]\n\ncosSim <- cosineSimilarity(model_cue, model_target)\n\n\npairs <- na.omit(data.frame(as.table(cosSim))) %>%\n  rename(Experimenter_Word=Var1,\n         Child_Word=Var2,\n         CosSim=Freq)\n\nd_assoc_sem <- d_assoc_phon %>%\n  left_join(pairs)\n  \n\n\n```\n\n```{r}\n\nword_excl <- (d_assoc_sem %>%\n  filter(is.na(CosSim) | Phon_dist ==\"0\") %>%\n  distinct(Experimenter_Word))$Experimenter_Word\n\nsem_plot <- d_assoc_sem %>%\n  filter(!(Experimenter_Word %in% word_excl)) %>%\n  group_by(Age2) %>%\n  summarise(mean = mean(CosSim),\n            sd = sd(CosSim),\n                   n0 = n()) %>%\n  mutate(se = sd / sqrt(n0),\n         lower = mean - qt(1 - (0.05 / 2), n0 - 1) * se,\n         upper = mean + qt(1 - (0.05 / 2), n0 - 1) * se) #%>%\n  #select(-sd, -n0, -se)\n\nsem_plot$Age2 = factor(sem_plot$Age2, levels = c(\"Younger\", \"Older\", \"Adult\"))\n\nggplot(sem_plot, aes(x=Age2, y=mean))+\n  geom_pointrange(aes(ymin = lower, ymax = upper), \n                  position = position_dodge(width = .1)) \n\n```\n\n",
    "created" : 1523037369298.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2340337021",
    "id" : "9209B57B",
    "lastKnownWriteTime" : 1523056839,
    "last_content_update" : 1523056839613,
    "path" : "~/Documents/Experiments/Kidasso/main.Rmd",
    "project_path" : "main.Rmd",
    "properties" : {
        "last_setup_crc32" : "71264F83d469d62d"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}